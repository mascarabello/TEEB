

-- ETAPA 2: OBJETIVO: Gerar um ranking de imoveis para alocacao espacial de RDP e ILP 
-- Para atingir este objetivo, primeiramente vamos calcular a aptidao media e a infraestrutura media para cada imovel, 
-- posteriormente calcularemos o indicador de credito rural. Por fim, teremos um indicador medio por tamanho de imovel 
-- e regiao.


-- Este script calcular o valor de indicador de credito rural para cada imovel
-- TABELA FINAL DESTE SCRIPT :  teeb.teeb_indice_credito

-- Os dados de credito rural foram adicionados no BD a partir do scrip preproc_credito.R
SELECT * FROM public.teeb_creditorural_custeioinvestimento

-- Copiando a tabela para o schema teeb - 3 min
DROP TABLE IF EXISTS teeb.teeb_creditorural_custeioinvestimento;
CREATE TABLE teeb.teeb_creditorural_custeioinvestimento AS 
SELECT *
FROM public.teeb_creditorural_custeioinvestimento

SELECT * FROM teeb.teeb_creditorural_custeioinvestimento limit 10

-- Apagando do schema public
DROP TABLE IF EXISTS public.teeb_creditorural_custeioinvestimento

-- Adicionando cd_uf
ALTER TABLE teeb.teeb_creditorural_custeioinvestimento ADD COLUMN cd_uf int NULL;
UPDATE teeb.teeb_creditorural_custeioinvestimento 
   SET cd_uf = substring(cd_mun::text, 1, 2)::int 
   
-- ADICIONANDO coluna de TAMANHO DE IMÓVEL
ALTER TABLE teeb.teeb_creditorural_custeioinvestimento ADD COLUMN ctamprop text NULL;

UPDATE teeb.teeb_creditorural_custeioinvestimento 
   SET ctamprop = CASE 
    WHEN cdprograma = 999 THEN 'GRANDE'
    WHEN cdprograma = 1 THEN 'PEQUENO'
    WHEN cdprograma = 50 OR cdprograma = 156 THEN 'MEDIO'	
    ELSE 'ERRO'
	END;

SELECT * FROM teeb.teeb_creditorural_custeioinvestimento where ctamprop = 'ERRO'


-- mapeamento de microregiao e municipio
-- ogr2ogr -f PostgreSQL "PG:host=localhost user=postgres dbname=postgres port=5432 password=postgres" /Users/marlucescarabello/Documents/GitHub/TEEB/dados/processados/mapeamento_meso_micro_muni.csv 

select * from public.mapeamento_meso_micro_muni

-- copiando tabela para teeb
DROP TABLE IF EXISTS teeb.mapeamento_micro_muni;
CREATE TABLE teeb.mapeamento_micro_muni AS 
SELECT 
cast(cd_munibge as int) as cd_mun,
cast(cd_micro as int) as cd_micro
FROM public.mapeamento_meso_micro_muni

select * from teeb.mapeamento_micro_muni WHERE cd_micro = 31023

CREATE TABLE teeb.tamanho (ctamprop text);
INSERT INTO teeb.tamanho values ('GRANDE'),('MEDIO'),('PEQUENO')

CREATE TABLE teeb.mapeamento_micro_muni_tamanho AS
SELECT
 t.cd_mun,
 t.cd_micro,
 m.ctamprop
FROM teeb.mapeamento_micro_muni t
CROSS JOIN 
  teeb.tamanho m;

select * from teeb.mapeamento_micro_muni_tamanho


DROP TABLE IF EXISTS teeb.teeb_creditorural_microrregiao;
CREATE TABLE teeb.teeb_creditorural_microrregiao AS 
WITH foo AS (
SELECT
a.cd_uf,
b.cd_mun,
b.cd_micro,
b.ctamprop,
sum(a.valor) as valortotal
FROM teeb.teeb_creditorural_custeioinvestimento as a 
     RIGHT JOIN teeb.mapeamento_micro_muni_tamanho as b
	 on (a.cd_mun = b.cd_mun AND a.ctamprop = b.ctamprop)
	 GROUP BY a.cd_uf, b.cd_mun, b.cd_micro, b.ctamprop)
select 
cd_uf,
cd_mun,
cd_micro,
ctamprop,
valortotal,
avg(valortotal) OVER(PARTITION BY cd_micro,ctamprop ) as vmedio
FROM foo

SELECT * FROM teeb.teeb_creditorural_microrregiao 

-- 15370
select * FROM teeb.imoveis_regioesterm 
--where cd_micro = 35061 order by vmedio asc

-- 27 min 55 secs.
DROP TABLE IF EXISTS teeb.teeb_creditorural_microrregiao_uf;
CREATE TABLE teeb.teeb_creditorural_microrregiao_uf AS 
WITH foo2 AS (
SELECT
a.cd_uf,
b.regioes_term,	
a.cd_mun,
a.cd_micro,
a.ctamprop,
a.valortotal,
a.vmedio	
FROM teeb.teeb_creditorural_microrregiao as a 
     left join teeb.imoveis_regioesterm as b on a.cd_uf = b.cd_uf
	 GROUP BY a.cd_uf, b.regioes_term, a.cd_mun, a.cd_micro, a.ctamprop, a.valortotal, a.vmedio)
select 
cd_uf,
regioes_term,
cd_mun,
cd_micro,
ctamprop,
valortotal,
vmedio,
max(vmedio) OVER(PARTITION BY cd_uf,ctamprop ) as max_vmedio
FROM foo2
GROUP BY cd_uf, regioes_term, cd_mun, cd_micro, ctamprop, valortotal, vmedio

select * from teeb.teeb_creditorural_microrregiao_uf 


--- tirando o outlier da região de SP
select * from teeb.teeb_creditorural_microrregiao_uf  where (cd_uf = 35 AND ctamprop = 'GRANDE') order by vmedio desc
UPDATE teeb.teeb_creditorural_microrregiao_uf 
   SET max_vmedio = 57397218 WHERE (cd_uf = 35 AND ctamprop = 'GRANDE')

-- Adicionando a coluna indicador por microregião
ALTER TABLE teeb.teeb_creditorural_microrregiao_uf ADD COLUMN indicador float8 NULL;

UPDATE teeb.teeb_creditorural_microrregiao_uf 
   SET indicador = vmedio/max_vmedio

UPDATE teeb.teeb_creditorural_microrregiao_uf 
   SET indicador = CASE WHEN indicador > 1.0 THEN 1.0
       ELSE indicador
	   END

select * from teeb.teeb_creditorural_microrregiao_uf WHERE cd_micro = 31023


select * from teeb.teeb_creditorural_microrregiao_uf WHERE cd_micro = 31023
select * from teeb.teeb_creditorural_microrregiao_uf LIMIT 10

select * from teeb.imoveis_regioesterm -- 6061633


drop table if exists teeb.teeb_indice_credito;
CREATE TABLE teeb.teeb_indice_credito AS
WITH foo3 AS (
select
a.gid,
a.cd_mun,
a.cd_uf,
a.sub_class,
a.regioes_term,
a.tamanho,
CASE 
  WHEN tamanho = '0-50' THEN 'PEQUENO'
  WHEN tamanho = '50-100' THEN 'PEQUENO'  
  WHEN tamanho = '100-500' THEN 'MEDIO'
  WHEN tamanho = '500-1000' THEN 'MEDIO'  
  WHEN tamanho = '>1000 ' THEN 'GRANDE'    
END ctamprop
FROM teeb.imoveis_regioesterm a)
SELECT 
b.gid,
b.cd_mun,
c.cd_micro,
b.cd_uf,
b.sub_class,
b.regioes_term,
b.tamanho, 
b.ctamprop,
c.indicador
FROM foo3 b
   LEFT JOIN teeb.teeb_creditorural_microrregiao_uf c
   on (b.cd_mun=c.cd_mun AND b.ctamprop=c.ctamprop AND b.regioes_term=c.regioes_term)
GROUP BY b.gid, b.cd_mun, c.cd_micro, b.cd_uf, b.sub_class, b.regioes_term, b.tamanho, b.ctamprop, c.indicador


select * FROM teeb.teeb_indice_credito


--- PARA MAPAS
select 
cd_uf,
regioes_term,
cd_mun,
cd_micro,
ctamprop,
valortotal,
vmedio,
max_vmedio,
indicador
FROM teeb.teeb_creditorural_microrregiao_uf 
WHERE ctamprop = 'MEDIO'
GROUP BY cd_uf, regioes_term, cd_mun, cd_micro, ctamprop, valortotal, vmedio, max_vmedio,indicador
